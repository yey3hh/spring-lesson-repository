<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.kosa.myproject.mapper.ProductMapper">
	<sql id="productColumns">
		product_id, product_name, maker, price, created_at
	</sql>

	<select id="getTotalProductCount" resultType="int">
		SELECT COUNT(*) FROM spring_product
	</select>
	
	<select id="findAllProductList" resultType="org.kosa.myproject.domain.Product">
		SELECT <include refid="productColumns" /> FROM spring_product
	</select>
	
	<select id="findProductById" parameterType="Long">
		SELECT <include refid="productColumns" /> FROM spring_product WHERE product_id = #{productId} 
	</select>
	
	<update id="updateProduct" parameterType="org.kosa.myproject.domain.Product">
		UPDATE spring_product SET product_name = #{productName}, maker = #{maker}, price = #{price} WHERE product_id = #{productId} 
	</update>
	
	<!-- 
		useGeneratedKeys="true" : 데이터베이스에서 자동 생성된 키를 사용하도록 설정
		keyProperty="productId" : 자동 생성된 키를 객체의 어떤 필드에 저장할지 지정 (객체의 인스턴스 변수 이름)
	-->
	<insert id="registerProduct" parameterType="org.kosa.myproject.domain.Product" useGeneratedKeys="true" keyProperty="productId">
		INSERT INTO spring_product(product_name, maker, price) VALUES(product_name = #{productName}, maker = #{maker}, price = #{price})
	</insert>
	
	<select id="findByPriceRange" resultType="org.kosa.myproject.domain.Product" parameterType="bigdecimal">
		SELECT <include refid="productColumns" /> FROM spring_product WHERE price BETWEEN #{minPrice} AND #{maxPrice};
	</select>
</mapper>
