*** spring lesson note ***

주요 목차 (Spring 1차 프로젝트 전까지)
- Maven
- Git 형상관리
- Spring 관련 용어 정리
- IOC / DI 설정 스타일
	1) xml
	2) Annotation
	3) Java Config
- SpringBoot 소개 및 CommandLineRunner
- AOP 
- MyBatis Framework
- SpringMVC(Legacy)
- SpringBoot
- JUnit, Logging
- Thymeleaf
- Ajax / JSON
- CSS Framwork : Bootstrap
- Agile Scrum : Jira

------------------------------------------------
*** Spring 관련 용어 정리 ***

1. library : 라이브러리, 재사용 가능한 프로그램들의 모음
2. jar : 자바 프로그램 압축 확장자 (springboot application을 build 시 자동으로 생성)
3. war : 자바 웹어플리케이션 확장자
4. component : 독립적 기능단위를 가진 부품 (부품화되는 요소를 컴포넌트라고 함)
			   Bean => 자바 컴포넌트, 스프링에서 관리하는 컴포넌트(객체)를 Bean이라고 함
5. API : Application Programming Interface, 응용 프로그램을 개발하기 위해 제공하는 인터페이스
6. Framework : 사전적 의미는 틀, frame (틀) + work (일) => 일을 잘되게 하기 위해 제공하는 틀
			   반완전한 어플리케이션 -> 가능한 모든 요소를 지원하여 비즈니스에 집중하도록 함
7. Spring Framework : 자바 어플리케이션의 설계, 구현, 테스트, 운영에 대한 Infrastructure 기반을 제공함
					  다양한 컴포넌트 및 재사용 가능한 라이브러리와 디자인 패턴을 제공함
					  IOC/DI, AOP, SpringMVC, Data Access를 위한 MyBatis, JPA, 신속한 설정과 개발을 위한 SpringBoot, 
					  단위 테스트를 위한 JUnit, 보안을 위한 Srpign Security, MSA를 위한 Spring Cloud 등의 기술을 지원
					  
					  
*** Maven 의 핵심 역할 *** 
	: 프로젝트 관리 도구

의존성 관리 (Dependency Management)와 빌드 자동화 (Build Automation)

1. 의존성 관리 (Dependency Management)
필요 라이브러리를 일괄적으로 관리.
개념 : 프로젝트가 동작하기 위해 필요한 외부 라이브러리(JAR 파일 등)들을 자동으로 다운로드하고 관리하는 기능입니다.
Spring Boot의 Starter POMs : Spring Boot는 Maven의 의존성 관리 기능을 극대화하여 `spring-boot-starter-web`과 같은 "스타터 POM"을 제공합니다. 이 스타터 하나만 추가하면 웹 개발에 필요한 모든 의존성(Spring MVC, Tomcat 등)이 자동으로 설정되어 개발 초기 설정의 복잡성을 크게 줄여줍니다.

2. 빌드 자동화 (Build Automation)
프로젝트 완료 후 배포 deploy를 위해 jar or war로 build함
개념 : 소스 코드를 컴파일하고, 테스트를 실행하며, 패키징(JAR, WAR 파일 등)하여 배포 가능한 형태로 만드는 일련의 과정을 자동화하는 것을 의미합니다.

*** IOC와 DI/DL *** 

1. IOC
개념 : Inversion Of Control, 역제어, 제어의 역전 => 소프트웨어 설계 원리이자 디자인 패턴
	  객체 or Component or Bean 제어를 IOC Container에 위임
	  다시 말하면 필요 시 객체를 생성하는 것이 아니라 IOC Container로부터 필요한 객체를 받아오는 구조
	  WHY? => Loose Coupling 느슨한 결합도, 결합도란 모듈간의 상호 의존도, 결합도가 느슨해지면 확장성, 유지보수성 향상
2. DI
개념 : Dependency Injection, 의존성 주입 => 디자인 패턴
	  필요로 하는 의존성(Dependency : Bean or Component)을 주입(Injection)을 통해서 확보
	  IOC를 DI 기법을 통해 실현한다.
3. DL
개념 : Dependency Lookup, 의존성 검색 => 디자인 패턴
	  필요로 하는 의존성(Dependency : Bean or Component)을 검색(Lookup)을 통해서 확보
	  IOC를 DL 기법을 통해 실현한다.


